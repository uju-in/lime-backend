plugins {
    id 'java-library'
    id 'java-test-fixtures'
    id 'maven-publish'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.mysql:mysql-connector-j'

    implementation project(':lime-common')

    testFixturesImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testFixturesCompileOnly 'org.projectlombok:lombok'
    testFixturesAnnotationProcessor 'org.projectlombok:lombok'

    // 테스트 setup을 위한 의존성 추가
    testFixturesCompileOnly 'org.springframework.boot:spring-boot-starter-data-jpa'

    // querydsl 설정 추가
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // json ignore 사용하기 위해 추가
    implementation 'com.fasterxml.jackson.core:jackson-databind'
}

test {
    useJUnitPlatform()
}

def querydslDir = "src/generated/querydsl"

sourceSets {
    main.java.srcDirs += querydslDir
}

tasks.withType(JavaCompile).configureEach {
    options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

clean.doLast {
    file(querydslDir).deleteDir()
}

bootJar { enabled = false }
jar { enabled = true }
